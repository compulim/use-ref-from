name: Publish release on push tag

on:
  push:
    tags: 'v*'

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - id: read-package-json
        name: Read package.json
        run: echo version=`cat package.json | jq -r '.version'` >> $GITHUB_OUTPUT
      - name: Propagate versions
        run: |
          cd packages/use-ref-from
          npm version --no-git-tag-version ${{ steps.read-package-json.outputs.version }}
      - run: npm clean-install
      - run: npm run build --if-present
      - name: Run npm pack
        run: |
          cd packages/use-ref-from
          npm pack
      - name: Upload tarball artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: tarball
          path: packages/use-ref-from/*.tgz
      - name: Draft a new release
        run: gh release create ${{ github.ref_name }} ./packages/use-ref-from/*.tgz --draft --notes-file ./CHANGELOG.md
        env:
          GH_TOKEN: ${{ github.token }}

  publish-package:
    environment: production
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - name: Download tarball artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: tarball
      - id: read-package-json
        name: Read package.json
        run: |
          echo package-name=`tar --extract --file=\`ls ./*.tgz\` --to-stdout package/package.json | jq -r .name` >> $GITHUB_OUTPUT
          echo version=`tar --extract --file=\`ls ./*.tgz\` --to-stdout package/package.json | jq -r .version` >> $GITHUB_OUTPUT
      - if: ${{ contains(steps.read-package-json.outputs.version, '-') }}
        name: Check version number
        run: |
          echo ::error::Cannot publish prerelease version ${{ steps.read-package-json.outputs.version }}
          exit 1
      - run: npm publish `ls ./*.tgz`
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Summarize job
        run: NPM package published to https://npmjs.com/package/${{ steps.read-package-json.outputs.package-name }}/v/${{ steps.read-package-json.outputs.version }}. >> $GITHUB_STEP_SUMMARY

  publish-release:
    needs:
      - build
      - publish-package
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Publish release
        run: gh release edit ${{ github.ref_name }} --draft=false --repo ${{ github.repository }}
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Summarize job
        run: GitHub release created at https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}. >> $GITHUB_STEP_SUMMARY
