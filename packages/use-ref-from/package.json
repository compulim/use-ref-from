{
  "name": "use-ref-from",
  "version": "0.0.0-0",
  "description": "React.useRef with an immediate setter and read-only value.",
  "files": [
    "./lib/"
  ],
  "exports": {
    ".": {
      "import": {
        "types": "./lib/esmodules-types/index.d.ts",
        "default": "./lib/esmodules/index.js"
      },
      "require": {
        "types": "./lib/commonjs-types/index.d.ts",
        "default": "./lib/commonjs/index.js"
      }
    },
    "./useRefFrom": {
      "import": {
        "types": "./lib/esmodules-types/useRefFrom.d.ts",
        "default": "./lib/esmodules/useRefFrom.js"
      },
      "require": {
        "types": "./lib/commonjs-types/useRefFrom.d.ts",
        "default": "./lib/commonjs/useRefFrom.js"
      }
    }
  },
  "main": "./lib/commonjs/index.js",
  "typings": "./lib/commonjs-types/index.d.ts",
  "scripts": {
    "build": "npm run build:babel:commonjs && npm run build:babel:esmodules && npm run build:typescript:commonjs && npm run build:typescript:esmodules",
    "build:babel:commonjs": "babel src --config-file ./babel.commonjs.config.json --extensions .ts,.tsx --out-dir ./lib/commonjs/",
    "build:babel:esmodules": "babel src --config-file ./babel.esmodules.config.json --extensions .ts,.tsx --out-dir ./lib/esmodules/",
    "build:typescript:commonjs": "tsc --project ./src/tsconfig.declaration.commonjs.json",
    "build:typescript:esmodules": "tsc --project ./src/tsconfig.declaration.esmodules.json",
    "bump": "npm run bump:prod && npm run bump:dev && npm run bump:auditfix && npm run bump:babel",
    "bump:auditfix": "npm audit fix || exit 0",
    "bump:babel": "npm run bump:babel:commonjs && npm run bump:babel:esmodules",
    "bump:babel:commonjs": "cat babel.commonjs.config.json | jq --arg CORE_JS_VERSION `cat node_modules/@babel/runtime-corejs3/package.json | jq -r .version` '(.plugins[] | select(.[0] == \"@babel/plugin-transform-runtime\"))[1].version = $CORE_JS_VERSION' | prettier --parser json > babel.commonjs.config.json.tmp && mv babel.commonjs.config.json.tmp babel.commonjs.config.json",
    "bump:babel:esmodules": "cat babel.esmodules.config.json | jq --arg CORE_JS_VERSION `cat node_modules/@babel/runtime-corejs3/package.json | jq -r .version` '(.plugins[] | select(.[0] == \"@babel/plugin-transform-runtime\"))[1].version = $CORE_JS_VERSION' | prettier --parser json > babel.esmodules.config.json.tmp && mv babel.esmodules.config.json.tmp babel.esmodules.config.json",
    "bump:dev": "if [ `cat package.json | jq -r '(.devDependencies // {}) | length'` -ne 0 ]; then npm install $(cat package.json | jq -r '(.pinDependencies // {}) as $p | ((.devDependencies // {}) | keys) | map(. + \"@\" + ($p[.] // [\"latest\"])[0]) | .[]'); fi",
    "bump:prod": "if [ `cat package.json | jq -r '(.dependencies // {}) | length'` -ne 0 ]; then npm install --save-exact $(cat package.json | jq -r '(.pinDependencies // {}) as $p | ((.dependencies // {}) | keys) | map(. + \"@\" + ($p[.] // [\"latest\"])[0]) | .[]'); fi",
    "postbump": "cat package.json | jq '. + (.dependencies = (((.dependencies // {}) + (.localPeerDependencies // {})) | to_entries | sort_by(.key) | from_entries)) | (.devDependencies = (((.devDependencies // {}) + (.localPeerDevDependencies // {})) | to_entries | sort_by(.key) | from_entries))' > package-temp.json && mv package-temp.json package.json",
    "prebump": "cat package.json | jq '(((.localPeerDependencies // {}) | keys | map([\"dependencies\", .])) + ((.localPeerDevDependencies // {}) | keys | map([\"devDependencies\", .]))) as $localPeerPaths | delpaths($localPeerPaths)' > package-temp.json && mv package-temp.json package.json",
    "precommit": "npm run precommit:eslint && npm run precommit:typescript",
    "precommit:eslint": "eslint ./src/",
    "precommit:typescript": "tsc --noEmit --project ./src/tsconfig.json",
    "prepack": "cp ../../CHANGELOG.md . && cp ../../LICENSE . && cp ../../README.md .",
    "test": "jest"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/compulim/use-ref-from.git"
  },
  "keywords": [
    "react",
    "react-hook",
    "react-hooks"
  ],
  "author": "William Wong (https://github.com/compulim)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/compulim/use-ref-from/issues"
  },
  "homepage": "https://github.com/compulim/use-ref-from#readme",
  "pinDependencies": {
    "@types/react": [
      "17",
      "@testing-library/react-hooks@8.0.1 does not support react@>=18"
    ],
    "react": [
      "17",
      "@testing-library/react-hooks@8.0.1 does not support react@>=18"
    ],
    "react-test-renderer": [
      "17",
      "@testing-library/react-hooks@8.0.1 does not support react@>=18"
    ]
  },
  "devDependencies": {
    "@babel/cli": "^7.22.9",
    "@babel/core": "^7.22.9",
    "@babel/plugin-transform-runtime": "^7.22.9",
    "@babel/preset-env": "^7.22.9",
    "@babel/preset-typescript": "^7.22.5",
    "@testing-library/react-hooks": "^8.0.1",
    "@types/react": "^17.0.62",
    "jest": "^29.6.1",
    "jest-environment-jsdom": "^29.6.1",
    "react": "^17.0.2",
    "react-test-renderer": "^17.0.2",
    "typescript": "^5.1.6"
  },
  "peerDependencies": {
    "react": ">=16.9.0"
  },
  "dependencies": {
    "@babel/runtime-corejs3": "7.22.6"
  }
}
